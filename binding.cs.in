using System;
using System.Runtime.InteropServices;

namespace Mono.Terminal {

	public partial class Curses {

#region Screen initialization
	
		[DllImport ("@CURSES@", EntryPoint="initscr")]
		extern static internal IntPtr real_initscr ();
		static int lines, cols;

		static Window main_window;
		
		static public Window initscr ()
		{
			main_window = new Window (real_initscr ());
			console_sharp_get_dims (out lines, out cols);
			return main_window;
		}

		public static int Lines {	
			get {
				return lines;
			}
		}

		public static int Cols {
			get {
				return cols;
			}
		}

		[DllImport ("@CURSES@")]
		extern static public int endwin ();

		[DllImport ("@CURSES@")]
		extern static public bool isendwin ();

		//
		// Screen operations are flagged as internal, as we need to
		// catch all changes so we can update newscr, curscr, stdscr
		//
		[DllImport ("@CURSES@")]
		extern static public IntPtr internal_newterm (string type, IntPtr file_outfd, IntPtr file_infd);

		[DllImport ("@CURSES@")]
		extern static public IntPtr internal_set_term (IntPtr newscreen);

		[DllImport ("@CURSES@")]
	        extern static internal void internal_delscreen (IntPtr sp);
#endregion

#region Input Options
		[DllImport ("@CURSES@")]
		extern static public int cbreak ();
		
		[DllImport ("@CURSES@")]
		extern static public int nocbreak ();
		
		[DllImport ("@CURSES@")]
		extern static public int echo ();
		
		[DllImport ("@CURSES@")]
		extern static public int noecho ();
		
		[DllImport ("@CURSES@")]
		extern static public int halfdelay (int t);

		[DllImport ("@CURSES@")]
		extern static public int raw ();

		[DllImport ("@CURSES@")]
		extern static public int noraw ();
		
		[DllImport ("@CURSES@")]
		extern static public void noqiflush ();
		
		[DllImport ("@CURSES@")]
		extern static public void qiflush ();

		[DllImport ("@CURSES@")]
		extern static public int typeahead (IntPtr fd);

		[DllImport ("@CURSES@")]
		extern static public int timeout (int delay);

		//
		// Internal, as they are exposed in Window
		//
		[DllImport ("@CURSES@")]
		extern static internal int wtimeout (IntPtr win, int delay);
	       
		[DllImport ("@CURSES@")]
		extern static internal int notimeout (IntPtr win, bool bf);

		[DllImport ("@CURSES@")]
		extern static internal int keypad (IntPtr win, bool bf);
		
		[DllImport ("@CURSES@")]
		extern static internal int meta (IntPtr win, bool bf);
		
		[DllImport ("@CURSES@")]
		extern static internal int intrflush (IntPtr win, bool bf);
#endregion

#region Output Options
		[DllImport ("@CURSES@")]
		extern internal static int clearok (IntPtr win, bool bf);
		[DllImport ("@CURSES@")]
		extern internal static int idlok (IntPtr win, bool bf);
		[DllImport ("@CURSES@")]
		extern internal static void idcok (IntPtr win, bool bf);
		[DllImport ("@CURSES@")]
		extern internal static void immedok (IntPtr win, bool bf);
		[DllImport ("@CURSES@")]
		extern internal static int leaveok (IntPtr win, bool bf);
		[DllImport ("@CURSES@")]
		extern internal static int wsetscrreg (IntPtr win, int top, int bot);
		[DllImport ("@CURSES@")]
		extern internal static int scrollok (IntPtr win, bool bf);
		
		[DllImport ("@CURSES@")]
		extern public static int nl();
		[DllImport ("@CURSES@")]
		extern public static int nonl();
		[DllImport ("@CURSES@")]
		extern public static int setscrreg (int top, int bot);
		
#endregion

#region refresh functions

		[DllImport ("@CURSES@")]
		extern public static int refresh ();
		[DllImport ("@CURSES@")]
		extern public static int doupdate();

		[DllImport ("@CURSES@")]
		extern internal static int wrefresh (IntPtr win);
		[DllImport ("@CURSES@")]
		extern internal static int redrawwin (IntPtr win);
		[DllImport ("@CURSES@")]
		extern internal static int wredrawwin (IntPtr win, int beg_line, int num_lines);
		[DllImport ("@CURSES@")]
		extern internal static int wnoutrefresh (IntPtr win);
#endregion

#region Output
		[DllImport ("@CURSES@")]
		extern internal static int move (int line, int col);

		[DllImport ("@CURSES@")]
		extern internal static int addch (int ch);
		[DllImport ("@CURSES@")]
		extern internal static int addstr (string s);

		[DllImport ("@CURSES@")]
		extern internal static int wmove (IntPtr win, int line, int col);

		[DllImport ("@CURSES@")]
		extern internal static int waddch (IntPtr win, int ch);
#endregion

#region Attributes
		[DllImport ("@CURSES@")]
		extern internal static int attron (int attrs);
		[DllImport ("@CURSES@")]
		extern internal static int attroff (int attrs);
		[DllImport ("@CURSES@")]
		extern internal static int attrset (int attrs);
#endregion

#region Input
		[DllImport ("@CURSES@")]
		extern internal static int getch ();

		[DllImport ("@CURSES@")]
		extern internal static int mvgetch (int y, int x);
#endregion
		
#region Helpers
		[DllImport ("mono-curses")]
		internal extern static IntPtr console_sharp_get_stdscr ();

		[DllImport ("mono-curses")]
		internal extern static IntPtr console_sharp_get_curscr ();

		[DllImport ("mono-curses")]
		internal extern static void console_sharp_get_dims (out int lines, out int cols);
#endregion
	}
}
