<Type Name="Application" FullName="Mono.Terminal.Application">
  <TypeSignature Language="C#" Value="public class Application" />
  <AssemblyInfo>
    <AssemblyName>mono-curses</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            gui.cs Application driver.
            </summary>
    <remarks>
            Before using gui.cs, you must call Application.Init, then
            you would create your toplevel container (typically by
            calling:  new Container (0, 0, Application.Cols,
            Application.Lines), adding widgets to it and finally
            calling Application.Run on the toplevel container.
            </remarks>
  </Docs>
  <Members>
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Application ();" />
      <MemberType>Constructor</MemberType>
      <Parameters />
      <Docs><summary>To be added.</summary><remarks>To be added.</remarks></Docs>
    <AssemblyInfo><AssemblyVersion>0.0.0.0</AssemblyVersion><AssemblyVersion>1.0.0.0</AssemblyVersion></AssemblyInfo></Member><Member MemberName="ColorDialogFocus">
      <MemberSignature Language="C#" Value="public static int ColorDialogFocus;" />
      <MemberType>Field</MemberType>
      <ReturnValue><ReturnType>System.Int32</ReturnType></ReturnValue>
      <Docs><summary>
            Color for focused widgets on a dialog.
            </summary><remarks>To be added.</remarks></Docs>
    <AssemblyInfo><AssemblyVersion>0.0.0.0</AssemblyVersion><AssemblyVersion>1.0.0.0</AssemblyVersion></AssemblyInfo></Member><Member MemberName="ColorDialogHotFocus">
      <MemberSignature Language="C#" Value="public static int ColorDialogHotFocus;" />
      <MemberType>Field</MemberType>
      <ReturnValue><ReturnType>System.Int32</ReturnType></ReturnValue>
      <Docs><summary>
            Color for a hotkey in a focused widget on a dialog.
            </summary><remarks>To be added.</remarks></Docs>
    <AssemblyInfo><AssemblyVersion>0.0.0.0</AssemblyVersion><AssemblyVersion>1.0.0.0</AssemblyVersion></AssemblyInfo></Member><Member MemberName="ColorDialogHotNormal">
      <MemberSignature Language="C#" Value="public static int ColorDialogHotNormal;" />
      <MemberType>Field</MemberType>
      <ReturnValue><ReturnType>System.Int32</ReturnType></ReturnValue>
      <Docs><summary>
            Color for hotkeys in an unfocused widget on a dialog.
            </summary><remarks>To be added.</remarks></Docs>
    <AssemblyInfo><AssemblyVersion>0.0.0.0</AssemblyVersion><AssemblyVersion>1.0.0.0</AssemblyVersion></AssemblyInfo></Member><Member MemberName="ColorDialogNormal">
      <MemberSignature Language="C#" Value="public static int ColorDialogNormal;" />
      <MemberType>Field</MemberType>
      <ReturnValue><ReturnType>System.Int32</ReturnType></ReturnValue>
      <Docs><summary>
            Color for unfocused widgets on a dialog.
            </summary><remarks>To be added.</remarks></Docs>
    <AssemblyInfo><AssemblyVersion>0.0.0.0</AssemblyVersion><AssemblyVersion>1.0.0.0</AssemblyVersion></AssemblyInfo></Member><Member MemberName="ColorError">
      <MemberSignature Language="C#" Value="public static int ColorError;" />
      <MemberType>Field</MemberType>
      <ReturnValue><ReturnType>System.Int32</ReturnType></ReturnValue>
      <Docs><summary>
            Color used for error text.
            </summary><remarks>To be added.</remarks></Docs>
    <AssemblyInfo><AssemblyVersion>0.0.0.0</AssemblyVersion><AssemblyVersion>1.0.0.0</AssemblyVersion></AssemblyInfo></Member><Member MemberName="ColorFocus">
      <MemberSignature Language="C#" Value="public static int ColorFocus;" />
      <MemberType>Field</MemberType>
      <ReturnValue><ReturnType>System.Int32</ReturnType></ReturnValue>
      <Docs><summary>
            Color used for focused widgets.
            </summary><remarks>To be added.</remarks></Docs>
    <AssemblyInfo><AssemblyVersion>0.0.0.0</AssemblyVersion><AssemblyVersion>1.0.0.0</AssemblyVersion></AssemblyInfo></Member><Member MemberName="ColorHotFocus">
      <MemberSignature Language="C#" Value="public static int ColorHotFocus;" />
      <MemberType>Field</MemberType>
      <ReturnValue><ReturnType>System.Int32</ReturnType></ReturnValue>
      <Docs><summary>
            Color used for hotkeys in focused widgets.
            </summary><remarks>To be added.</remarks></Docs>
    <AssemblyInfo><AssemblyVersion>0.0.0.0</AssemblyVersion><AssemblyVersion>1.0.0.0</AssemblyVersion></AssemblyInfo></Member><Member MemberName="ColorHotNormal">
      <MemberSignature Language="C#" Value="public static int ColorHotNormal;" />
      <MemberType>Field</MemberType>
      <ReturnValue><ReturnType>System.Int32</ReturnType></ReturnValue>
      <Docs><summary>
            Color used for hotkeys in unfocused widgets.
            </summary><remarks>To be added.</remarks></Docs>
    <AssemblyInfo><AssemblyVersion>0.0.0.0</AssemblyVersion><AssemblyVersion>1.0.0.0</AssemblyVersion></AssemblyInfo></Member><Member MemberName="ColorMarked">
      <MemberSignature Language="C#" Value="public static int ColorMarked;" />
      <MemberType>Field</MemberType>
      <ReturnValue><ReturnType>System.Int32</ReturnType></ReturnValue>
      <Docs><summary>
            Color used for marked entries.
            </summary><remarks>To be added.</remarks></Docs>
    <AssemblyInfo><AssemblyVersion>0.0.0.0</AssemblyVersion><AssemblyVersion>1.0.0.0</AssemblyVersion></AssemblyInfo></Member><Member MemberName="ColorMarkedSelected">
      <MemberSignature Language="C#" Value="public static int ColorMarkedSelected;" />
      <MemberType>Field</MemberType>
      <ReturnValue><ReturnType>System.Int32</ReturnType></ReturnValue>
      <Docs><summary>
            Color used for marked entries that are currently
            selected with the cursor.
            </summary><remarks>To be added.</remarks></Docs>
    <AssemblyInfo><AssemblyVersion>0.0.0.0</AssemblyVersion><AssemblyVersion>1.0.0.0</AssemblyVersion></AssemblyInfo></Member><Member MemberName="ColorNormal">
      <MemberSignature Language="C#" Value="public static int ColorNormal;" />
      <MemberType>Field</MemberType>
      <ReturnValue><ReturnType>System.Int32</ReturnType></ReturnValue>
      <Docs><summary>
            Color used for unfocused widgets.
            </summary><remarks>To be added.</remarks></Docs>
    <AssemblyInfo><AssemblyVersion>0.0.0.0</AssemblyVersion><AssemblyVersion>1.0.0.0</AssemblyVersion></AssemblyInfo></Member><Member MemberName="Cols">
      <MemberSignature Language="C#" Value="public static int Cols { get; }" />
      <MemberType>Property</MemberType>
      <ReturnValue><ReturnType>System.Int32</ReturnType></ReturnValue>
      <Docs><summary>
            The number of columns on the screen
            </summary><value>To be added.</value><remarks>To be added.</remarks></Docs>
    <AssemblyInfo><AssemblyVersion>0.0.0.0</AssemblyVersion><AssemblyVersion>1.0.0.0</AssemblyVersion></AssemblyInfo></Member><Member MemberName="EmptyContainer">
      <MemberSignature Language="C#" Value="public static Mono.Terminal.Container EmptyContainer { get; }" />
      <MemberType>Property</MemberType>
      <ReturnValue><ReturnType>Mono.Terminal.Container</ReturnType></ReturnValue>
      <Docs><summary>
            The singleton EmptyContainer that covers the entire screen.
            </summary><value>To be added.</value><remarks>To be added.</remarks></Docs>
    <AssemblyInfo><AssemblyVersion>0.0.0.0</AssemblyVersion><AssemblyVersion>1.0.0.0</AssemblyVersion></AssemblyInfo></Member><Member MemberName="Error">
      <MemberSignature Language="C#" Value="public static void Error (string caption, string text);" />
      <MemberType>Method</MemberType>
      <ReturnValue><ReturnType>System.Void</ReturnType></ReturnValue>
      <Parameters><Parameter Name="caption" Type="System.String" /><Parameter Name="text" Type="System.String" /></Parameters>
      <Docs><param name="caption">To be added.</param><param name="text">To be added.</param><summary>
            Displays an error message.
            </summary><remarks /></Docs>
    <AssemblyInfo><AssemblyVersion>0.0.0.0</AssemblyVersion><AssemblyVersion>1.0.0.0</AssemblyVersion></AssemblyInfo></Member><Member MemberName="Error">
      <MemberSignature Language="C#" Value="public static void Error (string caption, string format, object[] pars);" />
      <MemberType>Method</MemberType>
      <ReturnValue><ReturnType>System.Void</ReturnType></ReturnValue>
      <Parameters><Parameter Name="caption" Type="System.String" /><Parameter Name="format" Type="System.String" /><Parameter Name="pars" Type="System.Object[]"><Attributes><Attribute><AttributeName>System.ParamArray</AttributeName></Attribute></Attributes></Parameter></Parameters>
      <Docs><param name="caption">To be added.</param><param name="format">To be added.</param><param name="pars">To be added.</param><summary>
            Displays an error message.
            </summary><remarks>
            Overload that allows for String.Format parameters.
            </remarks></Docs>
    <AssemblyInfo><AssemblyVersion>0.0.0.0</AssemblyVersion><AssemblyVersion>1.0.0.0</AssemblyVersion></AssemblyInfo></Member><Member MemberName="Info">
      <MemberSignature Language="C#" Value="public static void Info (string caption, string text);" />
      <MemberType>Method</MemberType>
      <ReturnValue><ReturnType>System.Void</ReturnType></ReturnValue>
      <Parameters><Parameter Name="caption" Type="System.String" /><Parameter Name="text" Type="System.String" /></Parameters>
      <Docs><param name="caption">To be added.</param><param name="text">To be added.</param><summary>
            Displays an informational message.
            </summary><remarks /></Docs>
    <AssemblyInfo><AssemblyVersion>0.0.0.0</AssemblyVersion><AssemblyVersion>1.0.0.0</AssemblyVersion></AssemblyInfo></Member><Member MemberName="Info">
      <MemberSignature Language="C#" Value="public static void Info (string caption, string format, object[] pars);" />
      <MemberType>Method</MemberType>
      <ReturnValue><ReturnType>System.Void</ReturnType></ReturnValue>
      <Parameters><Parameter Name="caption" Type="System.String" /><Parameter Name="format" Type="System.String" /><Parameter Name="pars" Type="System.Object[]"><Attributes><Attribute><AttributeName>System.ParamArray</AttributeName></Attribute></Attributes></Parameter></Parameters>
      <Docs><param name="caption">To be added.</param><param name="format">To be added.</param><param name="pars">To be added.</param><summary>
            Displays an informational message.
            </summary><remarks>
            Overload that allows for String.Format parameters.
            </remarks></Docs>
    <AssemblyInfo><AssemblyVersion>0.0.0.0</AssemblyVersion><AssemblyVersion>1.0.0.0</AssemblyVersion></AssemblyInfo></Member><Member MemberName="Init">
      <MemberSignature Language="C#" Value="public static void Init (bool disable_color);" />
      <MemberType>Method</MemberType>
      <ReturnValue><ReturnType>System.Void</ReturnType></ReturnValue>
      <Parameters><Parameter Name="disable_color" Type="System.Boolean" /></Parameters>
      <Docs><param name="disable_color">To be added.</param><summary>
            Initializes the runtime.   The boolean flag
            indicates whether we are forcing color to be off.
            </summary><remarks>To be added.</remarks></Docs>
    <AssemblyInfo><AssemblyVersion>0.0.0.0</AssemblyVersion><AssemblyVersion>1.0.0.0</AssemblyVersion></AssemblyInfo></Member><Member MemberName="Iteration">
      <MemberSignature Language="C#" Value="public static event EventHandler Iteration;" />
      <MemberType>Event</MemberType>
      <ReturnValue><ReturnType>System.EventHandler</ReturnType></ReturnValue>
      <Docs><summary>
            This event is raised on each iteration of the
            main loop.
            </summary><remarks>
            See also <see cref="F:Mono.Terminal.Application.Timeout" /></remarks></Docs>
    <AssemblyInfo><AssemblyVersion>0.0.0.0</AssemblyVersion><AssemblyVersion>1.0.0.0</AssemblyVersion></AssemblyInfo></Member><Member MemberName="Lines">
      <MemberSignature Language="C#" Value="public static int Lines { get; }" />
      <MemberType>Property</MemberType>
      <ReturnValue><ReturnType>System.Int32</ReturnType></ReturnValue>
      <Docs><summary>
            The number of lines on the screen
            </summary><value>To be added.</value><remarks>To be added.</remarks></Docs>
    <AssemblyInfo><AssemblyVersion>0.0.0.0</AssemblyVersion><AssemblyVersion>1.0.0.0</AssemblyVersion></AssemblyInfo></Member><Member MemberName="MouseEventsAvailable">
      <MemberSignature Language="C#" Value="public static Mono.Terminal.Curses.Event MouseEventsAvailable;" />
      <MemberType>Field</MemberType>
      <ReturnValue><ReturnType>Mono.Terminal.Curses+Event</ReturnType></ReturnValue>
      <Docs><summary>
            A flag indicating which mouse events are available
            </summary><remarks>To be added.</remarks></Docs>
    <AssemblyInfo><AssemblyVersion>0.0.0.0</AssemblyVersion><AssemblyVersion>1.0.0.0</AssemblyVersion></AssemblyInfo></Member><Member MemberName="Msg">
      <MemberSignature Language="C#" Value="public static void Msg (bool error, string caption, string t);" />
      <MemberType>Method</MemberType>
      <ReturnValue><ReturnType>System.Void</ReturnType></ReturnValue>
      <Parameters><Parameter Name="error" Type="System.Boolean" /><Parameter Name="caption" Type="System.String" /><Parameter Name="t" Type="System.String" /></Parameters>
      <Docs><param name="error">To be added.</param><param name="caption">To be added.</param><param name="t">To be added.</param><summary>
            Displays a message on a modal dialog box.
            </summary><remarks>
            The error boolean indicates whether this is an
            error message box or not.
            </remarks></Docs>
    <AssemblyInfo><AssemblyVersion>0.0.0.0</AssemblyVersion><AssemblyVersion>1.0.0.0</AssemblyVersion></AssemblyInfo></Member><Member MemberName="Refresh">
      <MemberSignature Language="C#" Value="public static void Refresh ();" />
      <MemberType>Method</MemberType>
      <ReturnValue><ReturnType>System.Void</ReturnType></ReturnValue>
      <Parameters />
      <Docs><summary>
            Forces a repaint of the screen.
            </summary><remarks /></Docs>
    <AssemblyInfo><AssemblyVersion>0.0.0.0</AssemblyVersion><AssemblyVersion>1.0.0.0</AssemblyVersion></AssemblyInfo></Member><Member MemberName="Run">
      <MemberSignature Language="C#" Value="public static void Run (Mono.Terminal.Container container);" />
      <MemberType>Method</MemberType>
      <ReturnValue><ReturnType>System.Void</ReturnType></ReturnValue>
      <Parameters><Parameter Name="container" Type="Mono.Terminal.Container" /></Parameters>
      <Docs><param name="container">To be added.</param><summary>
            Runs the main loop on the given container.
            </summary><remarks>
            This method is used to start processing events
            for the main application, but it is also used to
            run modal dialog boxes.
            </remarks></Docs>
    <AssemblyInfo><AssemblyVersion>0.0.0.0</AssemblyVersion><AssemblyVersion>1.0.0.0</AssemblyVersion></AssemblyInfo></Member><Member MemberName="Timeout">
      <MemberSignature Language="C#" Value="public static int Timeout;" />
      <MemberType>Field</MemberType>
      <ReturnValue><ReturnType>System.Int32</ReturnType></ReturnValue>
      <Docs><summary>
            The time before we timeout on a curses call.
            </summary><remarks>
            This is needed for applications that need to
            poll or update other bits of information at
            specified intervals.
            <para>The default value -1, means to wait until
            an event is ready.   If the value is zero, then
            events are only processed if they are available,
            otherwise it is timeout in milliseconds to wait
            for an event to arrive before running an
            iteration on the main loop.   See <see cref="E:Mono.Terminal.Application.Iteration" />.</para></remarks></Docs>
    <AssemblyInfo><AssemblyVersion>0.0.0.0</AssemblyVersion><AssemblyVersion>1.0.0.0</AssemblyVersion></AssemblyInfo></Member>
  </Members>
</Type>
