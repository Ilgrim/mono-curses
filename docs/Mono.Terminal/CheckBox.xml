<Type Name="CheckBox" FullName="Mono.Terminal.CheckBox">
  <TypeSignature Language="C#" Value="public class CheckBox : Mono.Terminal.Widget" />
  <AssemblyInfo>
    <AssemblyName>mono-curses</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Mono.Terminal.Widget</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    
    
    
    
    
    
    
    
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CheckBox (int x, int y, string s);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters><Parameter Name="x" Type="System.Int32" /><Parameter Name="y" Type="System.Int32" /><Parameter Name="s" Type="System.String" /></Parameters>
      <Docs><param name="x">To be added.</param><param name="y">To be added.</param><param name="s">To be added.</param><summary>
            Public constructor, creates a CheckButton based on
            the given text at the given position.
            </summary><remarks>
            The size of CheckButton is computed based on the
            text length. This CheckButton is not toggled.
            </remarks></Docs>
    </Member><Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CheckBox (int x, int y, string s, bool is_checked);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters><Parameter Name="x" Type="System.Int32" /><Parameter Name="y" Type="System.Int32" /><Parameter Name="s" Type="System.String" /><Parameter Name="is_checked" Type="System.Boolean" /></Parameters>
      <Docs><param name="x">To be added.</param><param name="y">To be added.</param><param name="s">To be added.</param><param name="is_checked">To be added.</param><summary>
            Public constructor, creates a CheckButton based on
            the given text at the given position and a state.
            </summary><remarks>
            The size of CheckButton is computed based on the
            text length.
            </remarks></Docs>
    </Member><Member MemberName="Checked">
      <MemberSignature Language="C#" Value="public bool Checked { set; get; }" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue><ReturnType>System.Boolean</ReturnType></ReturnValue>
      <Docs><summary>
            The state of the checkbox.
            </summary><value>To be added.</value><remarks>To be added.</remarks></Docs>
    </Member><Member MemberName="Text">
      <MemberSignature Language="C#" Value="public string Text { set; get; }" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue><ReturnType>System.String</ReturnType></ReturnValue>
      <Docs><summary>
            The text displayed by this widget.
            </summary><value>To be added.</value><remarks>To be added.</remarks></Docs>
    </Member><Member MemberName="Toggled">
      <MemberSignature Language="C#" Value="public event EventHandler Toggled;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue><ReturnType>System.EventHandler</ReturnType></ReturnValue>
      <Docs><summary>
            Toggled event, raised when the CheckButton is toggled.
            </summary><remarks>
            Client code can hook up to this event, it is
            raised when the checkbutton is activated either with
            the mouse or the keyboard.
            </remarks></Docs>
    </Member>
  </Members>
</Type>
